pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = "192.168.4.81:5000" // Your private Docker registry
        DOCKER_IMAGE = "hello-world-java"
        env.BUILD_NUMBER = "1.0"
        KUBECONFIG_CREDENTIALS = credentials('kubeconfig-credentials') // Add Jenkins credentials for Kubeconfig
    }

    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'github-credentials', url: 'https://github.com/prasan-cloud/test-deployment.git'
            }
        }

        stage('Build') {
            steps {
                script {
                    // Compile and build the Java application with Maven
                    sh 'mvn clean package'
                }
            }
        }

        stage('Docker Build') {
            steps {
                script {
                    // Build Docker image
                    sh "docker build -t ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${env.BUILD_NUMBER} ."
                }
            }
        }

        stage('Docker Push') {
            steps {
                script {
                    // Push Docker image to private Docker registry
                    withDockerRegistry(credentialsId: 'docker-registry-credentials', url: "https://${DOCKER_REGISTRY}") {
                        sh "docker push ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${env.BUILD_NUMBER}"
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    // Use Kubeconfig to deploy in the Kubernetes cluster
                    withKubeConfig(credentialsId: 'kubeconfig-credentials') {
                        sh """
                        kubectl set image deployment/hello-world-deployment hello-world-container=${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${env.BUILD_NUMBER} -n hello-world
                        """
                    }
                }
            }
        }
    }
}
